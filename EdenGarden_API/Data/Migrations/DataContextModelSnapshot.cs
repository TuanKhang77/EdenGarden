// <auto-generated />
using System;
using EdenGarden_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EdenGarden_API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookingService", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<int>("UsedServiceId")
                        .HasColumnType("integer");

                    b.HasKey("BookingId", "UsedServiceId");

                    b.HasIndex("UsedServiceId");

                    b.ToTable("BookingService");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("PassWordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PassWordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<int?>("FirstPay")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PayDay")
                        .HasColumnType("timestamp");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("TotalPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.BookedRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Checkin")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("Checkout")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("RoomID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomID");

                    b.ToTable("BookedRoom");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Bookday")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("NumOfPeople")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("integer");

                    b.Property<string>("CardId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<int?>("Floor")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("RoomCode")
                        .HasColumnType("text");

                    b.Property<string>("RoomStatus")
                        .HasColumnType("text");

                    b.Property<int?>("RoomTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Img")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<int?>("NumofPeople")
                        .HasColumnType("integer");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Services")
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("text");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("BookingService", b =>
                {
                    b.HasOne("EdenGarden_API.Models.Entities.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EdenGarden_API.Models.Entities.Service", null)
                        .WithMany()
                        .HasForeignKey("UsedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Bill", b =>
                {
                    b.HasOne("EdenGarden_API.Models.Entities.Booking", null)
                        .WithOne("Bill")
                        .HasForeignKey("EdenGarden_API.Models.Entities.Bill", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.BookedRoom", b =>
                {
                    b.HasOne("EdenGarden_API.Models.Entities.Booking", "Booking")
                        .WithMany("BookedRooms")
                        .HasForeignKey("BookingId");

                    b.HasOne("EdenGarden_API.Models.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID");

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Client", b =>
                {
                    b.HasOne("EdenGarden_API.Models.Entities.Booking", null)
                        .WithOne("client")
                        .HasForeignKey("EdenGarden_API.Models.Entities.Client", "BookingId");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Room", b =>
                {
                    b.HasOne("EdenGarden_API.Models.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("EdenGarden_API.Models.Entities.Booking", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("BookedRooms");

                    b.Navigation("client");
                });
#pragma warning restore 612, 618
        }
    }
}
